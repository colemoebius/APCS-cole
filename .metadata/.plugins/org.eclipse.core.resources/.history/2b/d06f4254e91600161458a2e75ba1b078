import java.io.FileInputStream;
04
import java.io.FileOutputStream;
05
import java.io.IOException;
06
import java.io.InputStream;
07
import java.io.OutputStream;
08
import java.security.InvalidAlgorithmParameterException;
09
import java.security.InvalidKeyException;
10
import java.security.NoSuchAlgorithmException;
11
import java.security.spec.AlgorithmParameterSpec;
12
 
13
import javax.crypto.Cipher;
14
import javax.crypto.CipherInputStream;
15
import javax.crypto.CipherOutputStream;
16
import javax.crypto.KeyGenerator;
17
import javax.crypto.NoSuchPaddingException;
18
import javax.crypto.SecretKey;
19
import javax.crypto.spec.IvParameterSpec;
20
 
21
public class JavaDESEncryption {
22
 
23
    private static Cipher encrypt;
24
    private static Cipher decrypt;
25
 
26
    private static final byte[] initialization_vector = { 22, 33, 11, 44, 55, 99, 66, 77 };
27
 
28
    public static void main(String[] args) {
29
 
30
        String clearFile = "C:/Users/nikos7/Desktop/input.txt";
31
        String encryptedFile = "C:/Users/nikos7/Desktop/encrypted.txt";
32
        String decryptedFile = "C:/Users/nikos7/Desktop/decrypted.txt";
33
 
34
        try {
35
 
36
            SecretKey secret_key = KeyGenerator.getInstance("DES")
37
                    .generateKey();
38
            AlgorithmParameterSpec alogrithm_specs = new IvParameterSpec(
39
                    initialization_vector);
40
 
41
            // set encryption mode ...
42
            encrypt = Cipher.getInstance("DES/CBC/PKCS5Padding");
43
            encrypt.init(Cipher.ENCRYPT_MODE, secret_key, alogrithm_specs);
44
 
45
            // set decryption mode
46
            decrypt = Cipher.getInstance("DES/CBC/PKCS5Padding");
47
            decrypt.init(Cipher.DECRYPT_MODE, secret_key, alogrithm_specs);
48
 
49
            // encrypt file
50
            encrypt(new FileInputStream(clearFile), new FileOutputStream(
51
                    encryptedFile));
52
 
53
            // decrypt file
54
            decrypt(new FileInputStream(encryptedFile), new FileOutputStream(
55
                    decryptedFile));
56
            System.out.println("End of Encryption/Decryption procedure!");
57
 
58
        } catch (NoSuchAlgorithmException | NoSuchPaddingException
59
                | InvalidKeyException | InvalidAlgorithmParameterException
60
                | IOException e) {
61
            e.printStackTrace();
62
        }
63
 
64
    }
65
 
66
    private static void encrypt(InputStream input, OutputStream output)
67
            throws IOException {
68
 
69
        output = new CipherOutputStream(output, encrypt);
70
        writeBytes(input, output);
71
    }
72
 
73
    private static void decrypt(InputStream input, OutputStream output)
74
            throws IOException {
75
 
76
        input = new CipherInputStream(input, decrypt);
77
        writeBytes(input, output);
78
    }
79
 
80
    private static void writeBytes(InputStream input, OutputStream output)
81
            throws IOException {
82
        byte[] writeBuffer = new byte[512];
83
        int readBytes = 0;
84
 
85
        while ((readBytes = input.read(writeBuffer)) >= 0) {
86
            output.write(writeBuffer, 0, readBytes);
87
        }
88
 
89
        output.close();
90
        input.close();
91
    }
92
 
93
}
